<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="Current" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <SharedCppPropsImported>true</SharedCppPropsImported>
    <VsRelease Condition=" '$(VsRelease)' == '' ">17</VsRelease>
    <WinSdkRelease10 Condition=" '$(WinSdkRelease10)' == '' ">19041</WinSdkRelease10>
    <!-- Also update Noesis version in /vendor/packages.config -->
    <NoesisVersion>3.2.3</NoesisVersion>
    <WinPixVersion>1.0.231030001</WinPixVersion>

    <FFRoot>$([MSBuild]::EnsureTrailingSlash($([MSBuild]::NormalizeDirectory($(MSBuildThisFileDirectory), ..))))</FFRoot>
    <DevRoot Condition=" '$(DevRoot)' == '' ">$([MSBuild]::EnsureTrailingSlash($([MSBuild]::ValueOrDefault($([MSBuild]::GetDirectoryNameOfFileAbove($(FFRoot).., .gitmodules)), $(FFRoot)))))</DevRoot>
    <OutRoot Condition=" '$(OutRoot)' == '' ">$(DevRoot)out\</OutRoot>
    <PackagesRoot Condition=" '$(PackagesRoot)' == '' ">$(DevRoot)packages\</PackagesRoot>

    <!-- Project config -->
    <AppType Condition=" '$(AppType)' == '' ">Desktop</AppType>
    <Platform Condition=" '$(Platform)' == '' ">x64</Platform>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <XPlatform>$(Platform)</XPlatform>
    <XPlatform Condition=" '$(Platform)' == 'Win32' ">x86</XPlatform>
    <APlatform>$(XPlatform)</APlatform>
    <APlatform Condition=" '$(Platform)' == 'x64' ">amd64</APlatform>

    <!-- Project properties -->
    <CharacterSet Condition=" '$(CharacterSet)' == '' ">Unicode</CharacterSet>
    <ConfigurationType Condition=" '$(ConfigurationType)' == '' ">Application</ConfigurationType>
    <DefaultLanguage Condition=" '$(DefaultLanguage)' == '' ">en-US</DefaultLanguage>
    <Keyword Condition=" '$(Keyword)' == '' ">Win32Proj</Keyword>
    <MinimumVisualStudioVersion Condition=" '$(MinimumVisualStudioVersion)' == '' ">$(VsRelease).0</MinimumVisualStudioVersion>
    <PlatformToolset Condition=" '$(PlatformToolset)' == '' ">v143</PlatformToolset>
    <ProjectName Condition=" '$(ProjectName)' == '' ">$(MSBuildProjectName)</ProjectName>
    <RootNamespace Condition=" '$(RootNamespace)' == '' ">$(ProjectName)</RootNamespace>
    <TargetFrameworkVersion Condition=" '$(TargetFrameworkVersion)' == '' ">v4.8</TargetFrameworkVersion>
    <AppContainerApplication Condition=" '$(AppContainerApplication)' == '' ">false</AppContainerApplication>
    <WindowsTargetPlatformVersion Condition=" '$(WindowsTargetPlatformVersion)' == '' ">10.0.$(WinSdkRelease10).0</WindowsTargetPlatformVersion>

    <!-- Output paths -->
    <ConfigOutRoot>$(OutRoot)$(Configuration.ToLowerInvariant())_$(XPlatform.ToLowerInvariant())_$(AppType.ToLowerInvariant())\</ConfigOutRoot>
    <ProjectOutRoot>$(ConfigOutRoot)$(ProjectName)\</ProjectOutRoot>
    <IntDir>$(ProjectOutRoot)obj\</IntDir>
    <OutDir>$(ProjectOutRoot)bin\</OutDir>
    <GeneratedFilesDir>$(ProjectOutRoot)inc\</GeneratedFilesDir>
  </PropertyGroup>

  <PropertyGroup Condition="Exists('$(PackagesRoot)ffui.$(NoesisVersion)')">
    <!-- Noesis -->
    <NoesisRoot Condition=" '$(NoesisRoot)' == '' ">$(PackagesRoot)ffui.$(NoesisVersion)\content\</NoesisRoot>
    <NoesisLibDir Condition=" '$(AppType)' == 'Desktop' And '$(XPlatform)' == 'x86' ">$(NoesisRoot)lib\windows_x86\</NoesisLibDir>
    <NoesisLibDir Condition=" '$(AppType)' == 'Desktop' And '$(XPlatform)' == 'x64' ">$(NoesisRoot)lib\windows_x86_64\</NoesisLibDir>
    <NoesisDll Condition=" '$(AppType)' == 'Desktop' And '$(XPlatform)' == 'x86' ">$(NoesisRoot)bin\windows_x86\noesis.dll</NoesisDll>
    <NoesisDll Condition=" '$(AppType)' == 'Desktop' And '$(XPlatform)' == 'x64' ">$(NoesisRoot)bin\windows_x86_64\noesis.dll</NoesisDll>
  </PropertyGroup>

  <PropertyGroup Condition="Exists('$(PackagesRoot)WinPixEventRuntime.$(WinPixVersion)')">
    <!-- WinPix -->
    <WinPixRoot Condition=" '$(WinPixRoot)' == '' And '$(XPlatform)' == 'x64' ">$(PackagesRoot)WinPixEventRuntime.$(WinPixVersion)\</WinPixRoot>
    <WinPixLibDir Condition=" '$(XPlatform)' == 'x64' ">$(WinPixRoot)bin\x64\</WinPixLibDir>
    <WinPixIncDir Condition=" '$(XPlatform)' == 'x64' ">$(WinPixRoot)Include\WinPixEventRuntime\</WinPixIncDir>
    <WinPixDll Condition=" '$(AppType)' == 'Desktop' And '$(XPlatform)' == 'x64' ">$(WinPixLibDir)WinPixEventRuntime.dll</WinPixDll>
  </PropertyGroup>

  <!-- Property pages -->
  <ItemGroup>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)cpp.xml" />
    <AvailableItemName Include="ResJson">
      <Targets>ResJsonBuild</Targets>
    </AvailableItemName>
  </ItemGroup>

  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Profile|x64">
      <Configuration>Profile</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>

  <ItemGroup Condition=" '$(ConfigurationType)' != 'StaticLibrary' ">
    <!-- For Desktop builds, these files are also copied in AfterBuild2 in cpp.targets. Right here is for MSIX builds. -->
    <None Condition="Exists('$(NoesisDll)')" Include="$(NoesisDll)">
      <DeploymentContent>true</DeploymentContent>
    </None>
    <None Condition="Exists('$(WinPixDll)') And '$(Configuration)' != 'Release' " Include="$(WinPixDll)">
      <DeploymentContent>true</DeploymentContent>
    </None>
  </ItemGroup>

  <!-- Debug-only properties, possibly used by Cpp.props -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' " Label="Configuration">
    <LinkIncremental>true</LinkIncremental>
    <UseDebugLibraries>true</UseDebugLibraries>
    <WholeProgramOptimization>false</WholeProgramOptimization>
  </PropertyGroup>

  <!-- Release/Profile properties, possibly used by Cpp.props -->
  <PropertyGroup Condition=" '$(Configuration)' != 'Debug' " Label="Configuration">
    <LinkIncremental>false</LinkIncremental>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>

  <PropertyGroup>
    <IgnoreImportLibrary>false</IgnoreImportLibrary>
  </PropertyGroup>

</Project>
